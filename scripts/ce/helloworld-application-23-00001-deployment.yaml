apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autoscaling.knative.dev/maxScale: "10"
    autoscaling.knative.dev/minScale: "0"
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"autoscaling.knative.dev/maxScale":"10","autoscaling.knative.dev/minScale":"0","deployment.kubernetes.io/revision":"1","serving.knative.dev/creator":"system:serviceaccount:p8rrxs4rezl:p8rrxs4rezl-writer"},"creationTimestamp":"2022-06-20T14:14:15Z","generation":2,"labels":{"app":"helloworld-application-23-00001","service.istio.io/canonical-name":"helloworld-application-23","service.istio.io/canonical-revision":"helloworld-application-23-00001","serving.knative.dev/configuration":"helloworld-application-23","serving.knative.dev/configurationGeneration":"1","serving.knative.dev/configurationUID":"16829492-6e28-4252-817a-73ef590cc11f","serving.knative.dev/revision":"helloworld-application-23-00001","serving.knative.dev/revisionUID":"9384e6bd-d262-41fd-a319-b5574b5a12fe","serving.knative.dev/service":"helloworld-application-23","serving.knative.dev/serviceUID":"d8d6026b-c3a8-4938-99ca-2b9ba1ab00ea"},"name":"helloworld-application-23-00001-deployment","namespace":"p8rrxs4rezl","ownerReferences":[{"apiVersion":"serving.knative.dev/v1","blockOwnerDeletion":true,"controller":true,"kind":"Revision","name":"helloworld-application-23-00001","uid":"9384e6bd-d262-41fd-a319-b5574b5a12fe"}],"resourceVersion":"1243679744","uid":"7aa563e4-6ed9-4d04-b0f4-558fb34401a9"},"spec":{"progressDeadlineSeconds":600,"replicas":0,"revisionHistoryLimit":10,"selector":{"matchLabels":{"serving.knative.dev/revisionUID":"9384e6bd-d262-41fd-a319-b5574b5a12fe"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"autoscaling.knative.dev/maxScale":"10","autoscaling.knative.dev/minScale":"0","serving.knative.dev/creator":"system:serviceaccount:p8rrxs4rezl:p8rrxs4rezl-writer"},"creationTimestamp":null,"labels":{"app":"helloworld-application-23-00001","service.istio.io/canonical-name":"helloworld-application-23","service.istio.io/canonical-revision":"helloworld-application-23-00001","serving.knative.dev/configuration":"helloworld-application-23","serving.knative.dev/configurationGeneration":"1","serving.knative.dev/configurationUID":"16829492-6e28-4252-817a-73ef590cc11f","serving.knative.dev/revision":"helloworld-application-23-00001","serving.knative.dev/revisionUID":"9384e6bd-d262-41fd-a319-b5574b5a12fe","serving.knative.dev/service":"helloworld-application-23","serving.knative.dev/serviceUID":"d8d6026b-c3a8-4938-99ca-2b9ba1ab00ea"}},"spec":{"containers":[{"env":[{"name":"CE_SUBDOMAIN","value":"p8rrxs4rezl"},{"name":"CE_APP","value":"helloworld-application-23"},{"name":"CE_DOMAIN","value":"us-south.codeengine.appdomain.cloud"},{"name":"PORT","value":"8080"},{"name":"K_REVISION","value":"helloworld-application-23-00001"},{"name":"K_CONFIGURATION","value":"helloworld-application-23"},{"name":"K_SERVICE","value":"helloworld-application-23"}],"image":"icr.io/codeengine/helloworld@sha256:f3e856af825d167168a7ef5a848e16592ede102c2a782917dac25702b3ff4336","imagePullPolicy":"Always","lifecycle":{"preStop":{"httpGet":{"path":"/wait-for-drain","port":8022,"scheme":"HTTP"}}},"name":"user-container","ports":[{"containerPort":8080,"name":"user-port","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","ephemeral-storage":"400M","memory":"4G"},"requests":{"cpu":"1","ephemeral-storage":"400M","memory":"4G"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError"},{"env":[{"name":"SERVING_NAMESPACE","value":"p8rrxs4rezl"},{"name":"SERVING_SERVICE","value":"helloworld-application-23"},{"name":"SERVING_CONFIGURATION","value":"helloworld-application-23"},{"name":"SERVING_REVISION","value":"helloworld-application-23-00001"},{"name":"QUEUE_SERVING_PORT","value":"8012"},{"name":"CONTAINER_CONCURRENCY","value":"100"},{"name":"REVISION_TIMEOUT_SECONDS","value":"300"},{"name":"SERVING_POD","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"SERVING_POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"SERVING_LOGGING_CONFIG"},{"name":"SERVING_LOGGING_LEVEL"},{"name":"SERVING_REQUEST_LOG_TEMPLATE","value":"{\"httpRequest\": {\"requestMethod\": \"{{.Request.Method}}\", \"requestUrl\": \"{{js .Request.RequestURI}}\", \"requestSize\": \"{{.Request.ContentLength}}\", \"status\": {{.Response.Code}}, \"responseSize\": \"{{.Response.Size}}\", \"userAgent\": \"{{js .Request.UserAgent}}\", \"remoteIp\": \"{{js .Request.RemoteAddr}}\", \"serverIp\": \"{{.Revision.PodIP}}\", \"referer\": \"{{js .Request.Referer}}\", \"latency\": \"{{.Response.Latency}}s\", \"protocol\": \"{{.Request.Proto}}\"}, \"traceId\": \"{{index .Request.Header \"X-B3-Traceid\"}}\"}"},{"name":"SERVING_ENABLE_REQUEST_LOG","value":"false"},{"name":"SERVING_REQUEST_METRICS_BACKEND","value":"prometheus"},{"name":"TRACING_CONFIG_BACKEND","value":"none"},{"name":"TRACING_CONFIG_ZIPKIN_ENDPOINT"},{"name":"TRACING_CONFIG_DEBUG","value":"false"},{"name":"TRACING_CONFIG_SAMPLE_RATE","value":"0.1"},{"name":"USER_PORT","value":"8080"},{"name":"SYSTEM_NAMESPACE","value":"knative-serving"},{"name":"METRICS_DOMAIN","value":"knative.dev/internal/serving"},{"name":"SERVING_READINESS_PROBE","value":"{\"tcpSocket\":{\"port\":8080,\"host\":\"127.0.0.1\"},\"successThreshold\":1}"},{"name":"ENABLE_PROFILING","value":"false"},{"name":"SERVING_ENABLE_PROBE_REQUEST_LOG","value":"false"},{"name":"METRICS_COLLECTOR_ADDRESS"},{"name":"CONCURRENCY_STATE_ENDPOINT"},{"name":"CONCURRENCY_STATE_TOKEN_PATH","value":"/var/run/secrets/tokens/state-token"},{"name":"HOST_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.hostIP"}}},{"name":"ENABLE_HTTP2_AUTO_DETECTION","value":"false"}],"image":"private.icr.io/obs/codeengine/knative-serving/knative.dev/serving/cmd/queue:v1.3.2-rc14@sha256:10d34b4a06897ac635745da2e925a5508e1929d2d05b64fb22794d89d0ca3afe","imagePullPolicy":"IfNotPresent","name":"queue-proxy","ports":[{"containerPort":8022,"name":"http-queueadm","protocol":"TCP"},{"containerPort":9090,"name":"http-autometric","protocol":"TCP"},{"containerPort":9091,"name":"http-usermetric","protocol":"TCP"},{"containerPort":8012,"name":"queue-port","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"httpHeaders":[{"name":"K-Network-Probe","value":"queue"}],"path":"/","port":8012,"scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"1","ephemeral-storage":"1Gi","memory":"800Mi"},"requests":{"cpu":"25m","ephemeral-storage":"512Mi","memory":"400Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","enableServiceLinks":false,"nodeSelector":{"ibm-cloud.kubernetes.io/worker-pool-name":"codeengine-user-bx2-16x64"},"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":300,"tolerations":[{"effect":"NoSchedule","key":"codeengine.cloud.ibm.com/node-restriction-worker-pool-name","operator":"Equal","value":"codeengine-user-bx2-16x64"}]}}},"status":{"conditions":[{"lastTransitionTime":"2022-06-20T14:14:29Z","lastUpdateTime":"2022-06-20T14:14:29Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2022-06-20T14:14:15Z","lastUpdateTime":"2022-06-20T14:14:29Z","message":"ReplicaSet \"helloworld-application-23-00001-deployment-7ccd94bf7\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":2}}
    serving.knative.dev/creator: system:serviceaccount:p8rrxs4rezl:p8rrxs4rezl-writer
  generation: 3
  labels:
    app: helloworld-application-23-00001
    service.istio.io/canonical-name: helloworld-application-23
    service.istio.io/canonical-revision: helloworld-application-23-00001
    serving.knative.dev/configuration: helloworld-application-23
    serving.knative.dev/configurationGeneration: "1"
    serving.knative.dev/configurationUID: 16829492-6e28-4252-817a-73ef590cc11f
    serving.knative.dev/revision: helloworld-application-23-00001
    serving.knative.dev/revisionUID: 9384e6bd-d262-41fd-a319-b5574b5a12fe
    serving.knative.dev/service: helloworld-application-23
    serving.knative.dev/serviceUID: d8d6026b-c3a8-4938-99ca-2b9ba1ab00ea
  name: helloworld-application-23-00001-deployment
  namespace: p8rrxs4rezl
  ownerReferences:
  - apiVersion: serving.knative.dev/v1
    blockOwnerDeletion: true
    controller: true
    kind: Revision
    name: helloworld-application-23-00001
    uid: 9384e6bd-d262-41fd-a319-b5574b5a12fe
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      serving.knative.dev/revisionUID: 9384e6bd-d262-41fd-a319-b5574b5a12fe
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/maxScale: "10"
        autoscaling.knative.dev/minScale: "0"
        serving.knative.dev/creator: system:serviceaccount:p8rrxs4rezl:p8rrxs4rezl-writer
      creationTimestamp: null
      labels:
        app: helloworld-application-23-00001
        service.istio.io/canonical-name: helloworld-application-23
        service.istio.io/canonical-revision: helloworld-application-23-00001
        serving.knative.dev/configuration: helloworld-application-23
        serving.knative.dev/configurationGeneration: "1"
        serving.knative.dev/configurationUID: 16829492-6e28-4252-817a-73ef590cc11f
        serving.knative.dev/revision: helloworld-application-23-00001
        serving.knative.dev/revisionUID: 9384e6bd-d262-41fd-a319-b5574b5a12fe
        serving.knative.dev/service: helloworld-application-23
        serving.knative.dev/serviceUID: d8d6026b-c3a8-4938-99ca-2b9ba1ab00ea
    spec:
      volumes:
      - name: podinfo
        downwardAPI:
          items:
            - path: app
              fieldRef:
                fieldPath: metadata.labels['app']
      imagePullSecrets:
      - name: ce-auto-icr-private-us-south
      containers:
      - name: protector
        image: private.us.icr.io/dev_sec_ops/protector@sha256:eeac0b16875353fd5bf981fc6299ad8a0fdc383c0a0cce4d956b5e6bd91de880
        imagePullPolicy: Always
        ports:
          - name: p-http-server
            containerPort: 22000
        volumeMounts:
          - name: podinfo
            mountPath: /etc/podinfo
        env:
          - name: SERVICEURL
            value: http://127.0.0.1:8080
          - name: SERVICENAME
            value: helloworld
          - name: NAMESPACE
            value: p8rrxs4rezl
          - name: RTPLUGS
            value: wsgate
          - name: CMNAME
            value: guardian.helloworld
          - name: PORT
            value: "22000"
      - env:
        - name: CE_SUBDOMAIN
          value: p8rrxs4rezl
        - name: CE_APP
          value: helloworld-application-23
        - name: CE_DOMAIN
          value: us-south.codeengine.appdomain.cloud
        - name: PORT
          value: "8080"
        - name: K_REVISION
          value: helloworld-application-23-00001
        - name: K_CONFIGURATION
          value: helloworld-application-23
        - name: K_SERVICE
          value: helloworld-application-23
        image: icr.io/codeengine/helloworld@sha256:f3e856af825d167168a7ef5a848e16592ede102c2a782917dac25702b3ff4336
        imagePullPolicy: Always
        lifecycle:
          preStop:
            httpGet:
              path: /wait-for-drain
              port: 8022
              scheme: HTTP
        name: user-container
        ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 400M
            memory: 4G
          requests:
            cpu: "1"
            ephemeral-storage: 400M
            memory: 4G
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      - env:
        - name: SERVING_NAMESPACE
          value: p8rrxs4rezl
        - name: SERVING_SERVICE
          value: helloworld-application-23
        - name: SERVING_CONFIGURATION
          value: helloworld-application-23
        - name: SERVING_REVISION
          value: helloworld-application-23-00001
        - name: QUEUE_SERVING_PORT
          value: "8012"
        - name: CONTAINER_CONCURRENCY
          value: "100"
        - name: REVISION_TIMEOUT_SECONDS
          value: "300"
        - name: SERVING_POD
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SERVING_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVING_LOGGING_CONFIG
        - name: SERVING_LOGGING_LEVEL
        - name: SERVING_REQUEST_LOG_TEMPLATE
          value: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl":
            "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}",
            "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent":
            "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}",
            "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}",
            "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"},
            "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'
        - name: SERVING_ENABLE_REQUEST_LOG
          value: "false"
        - name: SERVING_REQUEST_METRICS_BACKEND
          value: prometheus
        - name: TRACING_CONFIG_BACKEND
          value: none
        - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
        - name: TRACING_CONFIG_DEBUG
          value: "false"
        - name: TRACING_CONFIG_SAMPLE_RATE
          value: "0.1"
        - name: USER_PORT
          value: "22000"
        - name: SYSTEM_NAMESPACE
          value: knative-serving
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: SERVING_READINESS_PROBE
          value: '{"tcpSocket":{"port":8080,"host":"127.0.0.1"},"successThreshold":1}'
        - name: ENABLE_PROFILING
          value: "false"
        - name: SERVING_ENABLE_PROBE_REQUEST_LOG
          value: "false"
        - name: METRICS_COLLECTOR_ADDRESS
        - name: CONCURRENCY_STATE_ENDPOINT
        - name: CONCURRENCY_STATE_TOKEN_PATH
          value: /var/run/secrets/tokens/state-token
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_HTTP2_AUTO_DETECTION
          value: "false"
        image: private.icr.io/obs/codeengine/knative-serving/knative.dev/serving/cmd/queue:v1.3.2-rc14@sha256:10d34b4a06897ac635745da2e925a5508e1929d2d05b64fb22794d89d0ca3afe
        imagePullPolicy: IfNotPresent
        name: queue-proxy
        ports:
        - containerPort: 8022
          name: http-queueadm
          protocol: TCP
        - containerPort: 9090
          name: http-autometric
          protocol: TCP
        - containerPort: 9091
          name: http-usermetric
          protocol: TCP
        - containerPort: 8012
          name: queue-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: K-Network-Probe
              value: queue
            path: /
            port: 8012
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 1Gi
            memory: 800Mi
          requests:
            cpu: 25m
            ephemeral-storage: 512Mi
            memory: 400Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      nodeSelector:
        ibm-cloud.kubernetes.io/worker-pool-name: codeengine-user-bx2-16x64
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 300
      tolerations:
      - effect: NoSchedule
        key: codeengine.cloud.ibm.com/node-restriction-worker-pool-name
        operator: Equal
        value: codeengine-user-bx2-16x64
status:
  conditions:
  - lastTransitionTime: "2022-06-20T14:14:29Z"
    lastUpdateTime: "2022-06-20T14:14:29Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-06-20T14:14:15Z"
    lastUpdateTime: "2022-06-20T14:14:29Z"
    message: ReplicaSet "helloworld-application-23-00001-deployment-7ccd94bf7" has
      successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
