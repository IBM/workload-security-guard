//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import "testing"



func TestGuardian_DeepCopy(t *testing.T) {
	t.Run("deepcopy", func(t *testing.T) {
		var in *Guardian
		in = new(Guardian)
		in.Spec = new(GuardianSpec)
		in.Spec.Configured = new(Critiria)
		in.Spec.Learned = new(Critiria)
		out := in.DeepCopy()
		if (out.Spec == nil) {
			t.Error("deepcopy failed")
		}
	})	
}
/*
func TestGuardianSpec_DeepCopy(t *testing.T) {
	t.Run("deepcopy", func(t *testing.T) {
		var in *GuardianSpec
		in = new(GuardianSpec)
		in.Configured = new(Critiria)
		in.Learned = make([]*Critiria, 1)
		out := in.DeepCopy()
		if (out.Configured == nil) {
			t.Error("deepcopy failed")
		}
	})	
}

func TestCritiria_DeepCopy(t *testing.T) {
	t.Run("deepcopy Critiria", func(t *testing.T) {
		var in *Critiria
		in = new(Critiria)
		in.Active = true
		out := in.DeepCopy()
		if (!out.Active) {
			t.Error("deepcopy failed")
		}
	})	
}

func TestReq_DeepCopy(t *testing.T) {
	t.Run("deepcopy Req", func(t *testing.T) {
		var in *ReqConfig
		in = new(ReqConfig)
		in.method.Clear()
		in.method.Add("Get")
		out := in.DeepCopy()
		if (out.method.List[0] != "Get") {
			t.Errorf("deepcopy Req failed %v\n", out.method.List[0])
		}
	})	
}
*/
func TestGuardianList_DeepCopyObject(t *testing.T) {
	t.Run("deepcopy GuardianList", func(t *testing.T) {
		var in *GuardianList
		in = new(GuardianList)
		o := in.DeepCopyObject()
		if (o==nil) {
			t.Errorf("deepcopy GuardianList failed\n")
		}
	})
}
/*
type somthing interface{}

type tested interface{
	DeepCopy() (somthing)
}

func DeepCopyTest(t *testing.T, i tested) {
	t.Run("deepcopy IpSet", func(t *testing.T) {
		out := i.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy IpSet failed\n")
		}
	})
}
func TestAll2_DeepCopy(t *testing.T) {
	var test tested
	DeepCopyTest(t, test)
	test.DeepCopy()

	test = new(Pile)
}
*/
func TestAll_DeepCopy(t *testing.T) {
	t.Run("deepcopy IpSet", func(t *testing.T) {
		var in *IpSet
		in = new(IpSet)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy IpSet failed\n")
		}
	})	
	t.Run("deepcopy KeyValConfig", func(t *testing.T) {
		var in *KeyValConfig
		in = new(KeyValConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy KeyValConfig failed\n")
		}
	})	
	t.Run("deepcopy KeyValPile", func(t *testing.T) {
		var in *KeyValPile
		in = new(KeyValPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy KeyValPile failed\n")
		}
	})	
	t.Run("deepcopy KeyValProfile", func(t *testing.T) {
		var in *KeyValProfile
		in = new(KeyValProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy KeyValProfile failed\n")
		}
	})	
	t.Run("deepcopy Pile", func(t *testing.T) {
		var in *Pile
		in = new(Pile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy Pile failed\n")
		}
	})	
	t.Run("deepcopy ProcessConfig", func(t *testing.T) {
		var in *ProcessConfig
		in = new(ProcessConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy ProcessConfig failed\n")
		}
	})	
	t.Run("deepcopy ProcessPile", func(t *testing.T) {
		var in *ProcessPile
		in = new(ProcessPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy ProcessPile failed\n")
		}
	})	
	t.Run("deepcopy ProcessProfile", func(t *testing.T) {
		var in *ProcessProfile
		in = new(ProcessProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy ProcessProfile failed\n")
		}
	})	
	t.Run("deepcopy QueryConfig", func(t *testing.T) {
		var in *QueryConfig
		in = new(QueryConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy QueryConfig failed\n")
		}
	})	
	t.Run("deepcopy QueryPile", func(t *testing.T) {
		var in *QueryPile
		in = new(QueryPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy QueryPile failed\n")
		}
	})	
	t.Run("deepcopy QueryProfile", func(t *testing.T) {
		var in *QueryProfile
		in = new(QueryProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy QueryProfile failed\n")
		}
	})	
	t.Run("deepcopy ReqConfig", func(t *testing.T) {
		var in *ReqConfig
		in = new(ReqConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy ReqConfig failed\n")
		}
	})	
	t.Run("deepcopy ReqPile", func(t *testing.T) {
		var in *ReqPile
		in = new(ReqPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy ReqPile failed\n")
		}
	})
	t.Run("deepcopy ReqProfile", func(t *testing.T) {
		var in *ReqProfile
		in = new(ReqProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy ReqProfile failed\n")
		}
	})
	t.Run("deepcopy RespConfig", func(t *testing.T) {
		var in *RespConfig
		in = new(RespConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy RespConfig failed\n")
		}
	})
	t.Run("deepcopy RespPile", func(t *testing.T) {
		var in *RespPile
		in = new(RespPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy RespPile failed\n")
		}
	})
	t.Run("deepcopy RespProfile", func(t *testing.T) {
		var in *RespProfile
		in = new(RespProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy RespProfile failed\n")
		}
	})
	t.Run("deepcopy SessionProfile", func(t *testing.T) {
		var in *SessionProfile
		in = new(SessionProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy SessionProfile failed\n")
		}
	})
	t.Run("deepcopy Set", func(t *testing.T) {
		var in *Set
		in = new(Set)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy Set failed\n")
		}
	})
	t.Run("deepcopy SimpleValConfig", func(t *testing.T) {
		var in *SimpleValConfig
		in = new(SimpleValConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy SimpleValConfig failed\n")
		}
	})
	t.Run("deepcopy SimpleValPile", func(t *testing.T) {
		var in *SimpleValPile
		in = new(SimpleValPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy SimpleValPile failed\n")
		}
	})
	t.Run("deepcopy SimpleValProfile", func(t *testing.T) {
		var in *SimpleValProfile
		in = new(SimpleValProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy SimpleValProfile failed\n")
		}
	})
	t.Run("deepcopy U8Minmax", func(t *testing.T) {
		var in *U8Minmax
		in = new(U8Minmax)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy U8Minmax failed\n")
		}
	})
	t.Run("deepcopy U8MinmaxSlice", func(t *testing.T) {
		var in U8MinmaxSlice
		in = make(U8MinmaxSlice,1)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy U8MinmaxSlice failed\n")
		}
	})
	t.Run("deepcopy Uint32Slice", func(t *testing.T) {
		var in Uint32Slice
		in = make(Uint32Slice,1)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy Uint32Slice failed\n")
		}
	})
	t.Run("deepcopy UrlConfig", func(t *testing.T) {
		var in *UrlConfig
		in = new(UrlConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy UrlConfig failed\n")
		}
	})
	t.Run("deepcopy UrlPile", func(t *testing.T) {
		var in *UrlPile
		in = new(UrlPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy UrlPile failed\n")
		}
	})
	t.Run("deepcopy UrlProfile", func(t *testing.T) {
		var in *UrlProfile
		in = new(UrlProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy UrlProfile failed\n")
		}
	})
	t.Run("deepcopy WsGate", func(t *testing.T) {
		var in *WsGate
		in = new(WsGate)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy WsGate failed\n")
		}
	})
	t.Run("deepcopy CidrSet", func(t *testing.T) {
		var in CidrSet
		in = make(CidrSet,1)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy CidrSet failed\n")
		}
	})
	t.Run("deepcopy Critiria", func(t *testing.T) {
		var in *Critiria
		in = new(Critiria)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy Critiria failed\n")
		}
	})
	t.Run("deepcopy Ctrl", func(t *testing.T) {
		var in *Ctrl
		in = new(Ctrl)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy Ctrl failed\n")
		}
	})
	
	t.Run("deepcopy Guardian", func(t *testing.T) {
		var in *Guardian
		in = new(Guardian)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy Guardian failed\n")
		}
	})
	t.Run("deepcopy GuardianSpec", func(t *testing.T) {
		var in *GuardianSpec
		in = new(GuardianSpec)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy GuardianSpec failed\n")
		}
	})
	t.Run("deepcopy GuardianList", func(t *testing.T) {
		var in *GuardianList
		in = new(GuardianList)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy GuardianList failed\n")
		}
	})
	t.Run("deepcopy HeadersConfig", func(t *testing.T) {
		var in *HeadersConfig
		in = new(HeadersConfig)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy HeadersConfig failed\n")
		}
	})
	t.Run("deepcopy HeadersPile", func(t *testing.T) {
		var in *HeadersPile
		in = new(HeadersPile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy HeadersPile failed\n")
		}
	})
	t.Run("deepcopy HeadersProfile", func(t *testing.T) {
		var in *HeadersProfile
		in = new(HeadersProfile)
		out := in.DeepCopy()
		if (out == nil) {
			t.Errorf("deepcopy HeadersProfile failed\n")
		}
	})
}